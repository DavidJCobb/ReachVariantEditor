<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<script-namespace name="game">
   <blurb>Contains game state values and functions for managing game state.</blurb>
   <members>
      <member name="betrayal_booting" type="number" read-only="true">
         <blurb>Whether Betrayal Booting is enabled.</blurb>
         <description>
            <p>
               This value indicates whether Betrayal Booting is enabled (1) or disabled (0).
            </p>
         </description>
         <related name="friendly_fire" />
      </member>
      <member name="betrayal_penalty" type="number" read-only="true">
         <blurb>The betrayal penalty time for respawning players, in seconds.</blurb>
      </member>
      <member name="current_round" type="number">
         <blurb>The current round number.</blurb>
         <description>
            <p>
               This value indicates the current round. The first round is 0.
            </p>
         </description>
         <example>
            global.number[0]  = game.round_limit
            global.number[0] -= 1
            if game.current_round == global.number[0] then
               --
               -- This is the final round!
               --
            end
         </example>
         <related name="round_limit" />
         <related name="rounds_to_win" />
      </member>
      <member name="dead_players_can_talk" type="number" read-only="true">
         <blurb>Whether dead players can talk.</blurb>
         <description>
            <p>
               This value is 1 if dead players can talk, or 0 otherwise.
            </p>
         </description>
      </member>
      <member name="dont_team_restrict_chat" type="number" read-only="true">
         <blurb>Whether chat is team-restricted.</blurb>
         <description>
            <p>
               This value indicates whether chat is team-restricted (0) or not (1).
            </p>
         </description>
      </member>
      <member name="fireteams_enabled" type="number" read-only="true">
         <blurb>Whether fireteams are enabled.</blurb>
         <description>
            <p>
               This value is 0 if fireteams are disabled, or 1 if they are enabled.
            </p>
         </description>
         <related name="teams_enabled" />
      </member>
      <member name="friendly_fire" type="number" read-only="true">
         <blurb>Whether Friendly Fire is enabled.</blurb>
         <description>
            <p>
               This value indicates whether Friendly Fire is enabled (1) or disabled (0).
            </p>
         </description>
      </member>
      <member name="grace_period_time" type="number" read-only="true">
         <blurb>The amount of Grace Period time.</blurb>
         <related name="grace_period_timer" />
         <related name="round_time_limit" />
         <related name="round_timer" />
         <related name="sudden_death_time" />
         <related name="sudden_death_timer" />
      </member>
      <member name="grace_period_timer" type="timer">
         <blurb>The current round's remaining Grace Period time.</blurb>
         <description>
            <p>
               This timer is used for the grace period. The grace period is a 
               period during which Sudden Death can reactivate. The initial 
               value of the grace period timer is the grace period embedded 
               in the game variant.
            </p>
            <p>
               Typically, Sudden Death will activate if, at the end of the round, a player is 
               in a position where they can attempt to complete the objective. For example, 
               during CTF, Sudden Death will activate if a player is standing very close to a 
               flag that they can pick up and capture.
            </p>
            <p>
               Typically, the Grace Period is used to complement Sudden Death. 
               Sudden Death activates when a player is able to further an 
               objective match; for example, it will enable if any player is 
               standing close to a flag that they can pick up and score. In 
               that scenario, if Sudden Death begins and then the conditions 
               for it are no longer met (the player stops being near the flag), 
               then the match will end after the Grace Period ends. Sudden 
               Death never resets (if a player comes near the flag again, the 
               timer will continue from where it left off), but the Grace 
               Period does.
            </p>
         </description>
         <example>
            alias sudden_death_enabled   = global.number[0]
            alias announced_sudden_death = global.number[1] -- only announce the start of Sudden Death once
            
            if not game.round_timer.is_zero() then 
               game.grace_period_timer = 0
            end
            if game.round_time_limit > 0 then 
               if not game.round_timer.is_zero() then 
                  announced_sudden_death = 0
               end
               if game.round_timer.is_zero() then 
                  if sudden_death_enabled == 1 then 
                     game.sudden_death_timer.set_rate(-100%)
                     game.grace_period_timer.reset()
                     if announced_sudden_death == 0 then 
                        send_incident(sudden_death, all_players, all_players)
                        announced_sudden_death = 1
                     end
                     if game.sudden_death_time > 0 and game.grace_period_timer > game.sudden_death_timer then 
                        game.grace_period_timer = game.sudden_death_timer
                     end
                  end
                  if sudden_death_enabled == 0 then 
                     game.grace_period_timer.set_rate(-100%)
                     if game.grace_period_timer.is_zero() then 
                        game.end_round()
                     end
                  end
                  if game.sudden_death_timer.is_zero() then 
                     game.end_round()
                  end
               end
            end
         </example>
      </member>
      <member name="grenades_enabled" type="number" read-only="true">
         <blurb>Whether Grenades on Map is enabled or not.</blurb>
         <description>
            <p>
               This value indicates whether Grenades on Map is enabled (1) or disabled (0).
            </p>
         </description>
      </member>
      <member name="indestructible_vehicles" type="number" read-only="true">
         <blurb>Whether Indestructible Vehicles are enabled or not.</blurb>
         <description>
            <p>
               This value indicates whether Indestructible Vehicles are enabled (1) or disabled (0).
            </p>
         </description>
      </member>
      <member name="lives_per_round" type="number" read-only="true">
         <blurb>The number of lives each player has per round, as set in the Custom Game options.</blurb>
         <related name="team_lives_per_round" />
      </member>
      <member name="loadout_cam_time" type="number" read-only="true">
         <blurb>The Initial Loadout Camera duration.</blurb>
         <description>
            <p>
               This is the Initial Loadout Camera duration, as specified in the game variant 
               settings.
            </p>
            <p>
               Script execution &mdash; and the Initial Loadout Camera period &mdash; begins 
               about three seconds before the Initial Loadout Camera view is actually visible, 
               while the screen is still fully black.
            </p>
         </description>
      </member>
      <member name="perfection_enabled" type="number" read-only="true">
         <blurb>Indicates whether it is possible to earn a Perfection Medal in this game variant.</blurb>
         <description>
            <p>
               This value is 1 if it is possible to earn a Perfection Medal in this game variant, 
               or 0 otherwise.
            </p>
         </description>
      </member>
      <member name="powerup_duration_red" type="number" read-only="true">
         <blurb>The duration of the Red Powerup (overshields), in seconds.</blurb>
         <related name="powerup_duration_blue" />
         <related name="powerup_duration_yellow" />
      </member>
      <member name="powerup_duration_blue" type="number" read-only="true">
         <blurb>The duration of the Blue Powerup (active camo), in seconds.</blurb>
      </member>
      <member name="powerup_duration_yellow" type="number" read-only="true">
         <blurb>The duration of the Yellow Powerup (custom), in seconds.</blurb>
      </member>
      <member name="proximity_voice" type="number" read-only="true">
         <blurb>Whether Proximity Voice is enabled.</blurb>
         <description>
            <p>
               This value indicates whether Proximity Voice is enabled (1) or disabled (0).
            </p>
         </description>
      </member>
      <member name="respawn_growth" type="number" read-only="true">
         <blurb>The base respawn growth time for all players, in seconds.</blurb>
         <related name="betrayal_penalty" />
         <related name="respawn_time" />
         <related name="respawn_traits_time" />
         <related name="suicide_penalty" />
      </member>
      <member name="respawn_time" type="number" read-only="true">
         <blurb>The base respawn time for all players, in seconds.</blurb>
      </member>
      <member name="respawn_traits_time" type="number" read-only="true">
         <blurb>The number of seconds a player has Respawn Traits for.</blurb>
      </member>
      <member name="round_limit" type="number" read-only="true">
         <blurb>The number of rounds.</blurb>
         <description>
            <p>
               This value indicates the maximum number of rounds. If there is no round 
               limit, then this value will be 0.
            </p>
         </description>
         <example>
            global.number[0]  = game.round_limit
            global.number[0] -= 1
            if game.current_round == global.number[0] then
               --
               -- This is the final round!
               --
            end
         </example>
      </member>
      <member name="round_timer" type="timer">
         <blurb>The current round's remaining time.</blurb>
         <description>
            <p>
               This timer is the round timer; it is displayed on the HUD. By default, it is 
               set to the round time selected in the Custom Game options; however, scripts 
               can assign a value to it. The game will automatically make announcements as 
               the timer's value approaches zero; however, the game will not automatically 
               end the round when the timer hits zero.
            </p>
            <p>
               The round timer's behavior appears to exist in order to enable Invasion to 
               use it to display the current phase's remaining time.
            </p>
         </description>
         <example>
            if game.round_time_limit > 0 and game.round_timer.is_zero() then
               game.end_round()
            end
         </example>
         <note>
            If you want to implement Sudden Death, you should use the <code>sudden_death_timer</code> 
            and the <code>grace_period_timer</code> in conjunction with the <code>round_timer</code>.
         </note>
      </member>
      <member name="round_time_limit" type="number" read-only="true">
         <blurb>The round time limit.</blurb>
         <description>
            <p>
               This value is the round time limit set in the Custom Game options. If there 
               is no round time limit, then this value is 0 or negative.
            </p>
         </description>
         <example>
            if game.round_time_limit > 0 and game.round_timer.is_zero() then
               game.end_round()
            end
         </example>
         <note>
            The round does not automatically end when the round time limit is reached. Refer to the 
            <a href="script/api/unnamed/members/round_timer">round_timer</a> documentation for more 
            information.
         </note>
      </member>
      <member name="rounds_to_win" type="number" read-only="true">
         <blurb>The number of rounds that a player or team must win in order to win the match.</blurb>
      </member>
      <member name="sudden_death_time" type="number" read-only="true">
         <blurb>The amount of Sudden Death time.</blurb>
      </member>
      <member name="sudden_death_timer" type="timer">
         <blurb>The current round's remaining Sudden Death time.</blurb>
         <description>
            <p>
               This timer is used for Sudden Death; it is displayed on the HUD when appropriate. 
               Its initial value is the <a href="sudden_death_time">sudden_death_time</a>.
            </p>
            <p>
               Typically, Sudden Death will activate if, at the end of the round, a player is 
               in a position where they can attempt to complete the objective. For example, 
               during CTF, Sudden Death will activate if a player is standing very close to a 
               flag that they can pick up and capture.
            </p>
            <p>
               Typically, the Grace Period is used to complement Sudden Death. 
               Sudden Death activates when a player is able to further an 
               objective match; for example, it will enable if any player is 
               standing close to a flag that they can pick up and score. In 
               that scenario, if Sudden Death begins and then the conditions 
               for it are no longer met (the player stops being near the flag), 
               then the match will end after the Grace Period ends. Sudden 
               Death never resets (if a player comes near the flag again, the 
               timer will continue from where it left off), but the Grace 
               Period does.
            </p>
         </description>
         <example>
            alias sudden_death_enabled   = global.number[0]
            alias announced_sudden_death = global.number[1] -- only announce the start of Sudden Death once
            
            if not game.round_timer.is_zero() then 
               game.grace_period_timer = 0
            end
            if game.round_time_limit > 0 then 
               if not game.round_timer.is_zero() then 
                  announced_sudden_death = 0
               end
               if game.round_timer.is_zero() then 
                  if sudden_death_enabled == 1 then 
                     game.sudden_death_timer.set_rate(-100%)
                     game.grace_period_timer.reset()
                     if announced_sudden_death == 0 then 
                        send_incident(sudden_death, all_players, all_players)
                        announced_sudden_death = 1
                     end
                     if game.sudden_death_time > 0 and game.grace_period_timer > game.sudden_death_timer then 
                        game.grace_period_timer = game.sudden_death_timer
                     end
                  end
                  if sudden_death_enabled == 0 then 
                     game.grace_period_timer.set_rate(-100%)
                     if game.grace_period_timer.is_zero() then 
                        game.end_round()
                     end
                  end
                  if game.sudden_death_timer.is_zero() then 
                     game.end_round()
                  end
               end
            end
         </example>
         <note>
            If you want to implement Sudden Death, you should use the <code>sudden_death_timer</code> 
            and the <code>grace_period_timer</code> in conjunction with the <code>round_timer</code>.
         </note>
      </member>
      <member name="suicide_penalty" type="number" read-only="true">
         <blurb>The suicide penalty time for respawning players, in seconds.</blurb>
      </member>
      <member name="score_to_win" type="number" read-only="true">
         <blurb>The score to win.</blurb>
         <description>
            <p>
               This value indicates the number of points that a player or team must be 
               accumulate to win.
            </p>
         </description>
         <example>
            -- Code borrowed from Territories, with slight modifications: play announcer 
            -- voiceovers when the player approaches the score to win.
            
            alias announced_30s_win = player.number[0]
            alias announced_60s_win = player.number[1]
            
            for each player do
               alias threshold_30s = temp_int_00
               alias threshold_60s = temp_int_02
               --
               threshold_30s = game.score_to_win
               threshold_60s = game.score_to_win
               threshold_30s -= 30
               threshold_60s -= 60
               if current_player.score >= threshold_60s and current_player.announced_60s_win == 0 and game.score_to_win > 60 then 
                  send_incident(one_minute_team_win, current_player, all_players)
                  current_player.announced_60s_win = 1
               end
               if current_player.score >= threshold_30s and current_player.announced_30s_win == 0 and game.score_to_win > 30 then 
                  send_incident(half_minute_team_win, current_player, all_players)
                  current_player.announced_30s_win = 1
               end
            end
         </example>
         <note>
            The round will automatically end if a player or team reaches the score to win.
         </note>
      </member>
      <member name="symmetry" type="number">
         <blurb>Whether this match is symmetric.</blurb>
         <description>
            <p>
               This value indicates whether the current match is symmetric (1) or asymmetric (0). 
               This value can be changed, but only during a "pre-game" trigger.
            </p>
         </description>
         <example>
            -- Code taken from CTF TU:
            
            enum sides
               multi
               one
               neutral
               three
            end

            alias opt_symmetry = script_option[0]

            on pregame: do
               game.symmetry = 1
               if opt_sides == sides.one then 
                  game.symmetry = 0
               end
            end
         </example>
         <related name="symmetry_get" />
      </member>
      <member name="symmetry_get" type="number" read-only="true">
         <blurb>Whether this match is symmetric.</blurb>
         <description>
            <p>
               This value indicates whether the current match is symmetric (1) or asymmetric (0). 
               The value is read-only.
            </p>
         </description>
      </member>
      <member name="team_lives_per_round" type="number" read-only="true">
         <blurb>The number of lives each team has per round, as set in the Custom Game options.</blurb>
      </member>
      <member name="teams_enabled" type="number" read-only="true">
         <blurb>Whether teams are enabled.</blurb>
         <description>
            <p>
               This value is 0 if teams are disabled, or 1 if they are enabled.
            </p>
         </description>
      </member>
   </members>
   <methods>
      <conditions>
         <condition name="is_in_forge" id="17">
            <blurb>Checks whether the current match is a Forge match.</blurb>
            <description>
               <p>
                  Community reverse-engineers believe that this function checks whether the current 
                  match is a Forge match. However, there doesn't appear to be any way to actually 
                  get a gametype script to run in Forge. That doesn't necessarily mean that the 
                  reverse-engineers who examined this function were wrong; perhaps Bungie originally 
                  planned for gametypes to run in Forge (allowing you to playtest scripted behaviors, 
                  like arming a bomb in Assault) and later scrapped the idea.
               </p>
            </description>
         </condition>
      </conditions>
      <actions>
         <method name="show_message_to" id="16">
            <args>
               <arg name="who">
                  The <a href="script/api/player">player</a> or <a href="script/api/team">team</a> 
                  to display the message for, or the value <var>all_players</var>.
               </arg>
               <arg name="sound" type="sound">An optional sound to play with the message.</arg>
               <arg name="text"  type="format-string">The text to display.</arg>
            </args>
            <blurb>Display a message in the kill feed.</blurb>
            <example>
               game.show_message_to(team[0], none, "Defend your VIP!")
               game.show_message_to(team[1], none, "Kill the VIP!")
            </example>
         </method>
         <method name="end_round" id="21">
            <blurb>Ends the round.</blurb>
            <description>
               <p>
                  This function ends the round when called.
               </p>
            </description>
            <example>
               if game.round_time_limit > 0 and game.round_timer.is_zero() then
                  game.end_round()
                  --
                  -- That's right: the round timer doesn't automatically end the round. Bungie 
                  -- probably set it up that way so that Invasion could use the timer for each 
                  -- individual phase.
                  --
               end
            </example>
         </method>
         <method name="play_sound_for" id="51">
            <args>
               <arg name="who">
                  The <a href="script/api/player">player</a> or <a href="script/api/team">team</a> 
                  to play the sound for, or the value <var>all_players</var>.
               </arg>
               <arg name="sound" type="sound">The sound to play.</arg>
               <arg name="immediate" type="bool">Whether to allow the sound to overlap with 
               other scripted sounds, or queue up to play after them.</arg>
            </args>
            <blurb>Play a sound.</blurb>
            <example>
               game.play_sound_for(all_players, timer_beep, true)
            </example>
         </method>
      </actions>
   </methods>
</script-namespace>